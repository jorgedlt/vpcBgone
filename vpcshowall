# My Colors
   export BLACK=$(tput setaf 0)
   export RED=$(tput setaf 1)
   export GREEN=$(tput setaf 2)
   export YELLOW=$(tput setaf 3)
   export BLUE=$(tput setaf 4)
   export MAGENTA=$(tput setaf 5)
   export CYAN=$(tput setaf 6)
   export WHITE=$(tput setaf 7)
   export GRAY=$(tput setaf 8)
   export GREY=$(tput setaf 8)
   export BOLD=$(tput bold)
   export REVERSE=$(tput rev)
   export RESET=$(tput sgr0)
#

_jsonparse ()
{
  echo "${1}" | grep -w ${2} | head -1 | cut -d':' -f2- | tr -d ' |,|"'
}

descDUMP ()
{
  echo "    ${GRAY}$1: [ ${YELLOW}$2 ${GRAY}]"
}

# vpcls ; source vpcshowall ; vpczorch vpc-1c1a6675

vpczorch ()
{
    if (( $# < 1 )); then
        echo usage: Needs at least one argument {VPC ID#};
        return;
    fi;

    for vpcID in $1;
    do

       descDUMP 'VPC ID' $vpcID;

        IGWid=$( aws ec2 describe-internet-gateways --filters "Name=attachment.vpc-id,Values=$vpcID");
        _iGWid=$( _jsonparse "$IGWid" InternetGatewayId );
        descDUMP 'Internet Gateway ID' $_iGWid;

        RTABid=$( aws ec2 describe-route-tables --filters "Name=attachment.vpc-id,Values=$vpcID");

        _RTBid=$( _jsonparse "$RTABid" GatewayId );
        descDUMP 'Route Tables ID' $_RTBid;


        echo inside loop
   done
}

echo after loop
echo
echo
echo xxxxxxxx XXXXXXXXX
# source vpcshowall ; vpczorch vpc-1c1a6675
