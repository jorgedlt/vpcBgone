# My Colors
   export BLACK=$(tput setaf 0)
   export RED=$(tput setaf 1)
   export GREEN=$(tput setaf 2)
   export YELLOW=$(tput setaf 3)
   export BLUE=$(tput setaf 4)
   export MAGENTA=$(tput setaf 5)
   export CYAN=$(tput setaf 6)
   export WHITE=$(tput setaf 7)
   export GRAY=$(tput setaf 8)
   export GREY=$(tput setaf 8)
   export BOLD=$(tput bold)
   export REVERSE=$(tput rev)
   export RESET=$(tput sgr0)
#

_jsonparse ()
{
  echo "${1}" | grep -w ${2} | head -1 | cut -d':' -f2- | tr -d ' |,|"'
}

descDUMP ()
{
  echo "    ${GRAY}$1: [ ${YELLOW}$2 ${GRAY}]"
}

# vpcls ; source vpcshowall ; vpczorch vpc-1c1a6675

vpczorch ()
{
    if (( $# < 1 )); then
        echo usage: Needs at least one argument {VPC ID#};
        return;
    fi;

    for vpcID in $1;
    do

        IGWid=$( aws ec2 describe-internet-gateways --filters "Name=attachment.vpc-id,Values=$vpcID");


        _iGWid=$( _jsonparse "$IGWid" InternetGatewayId );

        descDUMP 'VPC ID' $vpcID;
        descDUMP 'Internet Gateway ID' $_iGWid;

        RTABid=$( aws ec2 describe-route-tables --filters "Name=attachment.vpc-id,Values=$vpcID");
        _RTBid=$( _jsonparse "$RTABid" InternetGatewayId );
        descDUMP 'Route Tables ID' $_RTBid;



        echo
        echo
        echo
        echo xxxxxxxx

        echo;
        RTRid=$( aws ec2 describe-internet-gateways );

        NETlist=$( aws ec2 describe-subnets --filters Name=vpc-id,Values="${vpcID}" | grep 'SubnetId' | cut -d':' -f2 | tr -d ' |"|:|,' );
        for netID in $NETlist;
        do
            NETdesc=$( aws ec2 describe-subnets --subnet-ids "${netID}" );
            _NETcidr=$( _jsonparse "$NETdesc" CidrBlock );
            _NETname=$( _jsonparse "$NETdesc" Value );
            _NETstate=$( _jsonparse "$NETdesc" State );
            _NETcount=$( _jsonparse "$NETdesc" AvailableIpAddressCount );
            _NETpublic=$( _jsonparse "$NETdesc" MapPublicIpOnLaunch );
            _NETzone=$( _jsonparse "$NETdesc" AvailabilityZone );
            _NETDefault=$( _jsonparse "$NETdesc" DefaultForAz );

            descDUMP netID $netID VPCname $_NETname;
            descDUMP CIDR $_NETcidr State $_NETstate;
            descDUMP IPavail $_NETcount AZ $_NETzone;
            descDUMP Public $_NETpublic Default $_NETDefault;
            echo;
        done;
        echo -
    done
##
    sgDESC=$( aws ec2 describe-security-groups --filter Name=vpc-id,Values=${1} --output text );
    sgLIST=$( echo "$sgDESC" | grep SECURITYGROUPS );
    for sg in $( echo "$sgLIST" | grep .sg | cut -d'	' -f3 | sort | uniq );
        do
            sgTAG='null';
            sgJSON=$( aws ec2 describe-security-groups --group-ids ${sg} );
            _sgVPC=$( _ec2parse "$sgJSON" VpcId );
            _sgTAG=$( _ec2parse "$sgJSON" GroupName );
            _sgNAME=$( _ec2parse "$sgJSON" Description );
            descDUMP 'Security Group' $sg 'SG Name' $_sgNAME;
            descDUMP TAG $_sgTAG VPC $_sgVPC;
            echo;
    done

rtDESC$(aws ec2 describe-route-tables --filters Name=vpc-id,Values=vpc-ec374b85 | grep RouteTableId | tail -1);

    _stTAG=$( _ec2parse "$rtDESC" RouteTableId );

    descDUMP 'Router Table Group' $sg 'SG Name' $_stTAG;
}

## Get ACLs

# aws ec2 describe-network-acls --filters Name=vpc-id,Values=vpc-fd3b4794 | grep NetworkAclId \
# | tr -d ' |,|"' | sort | uniq | cut -d':' -f2
#
# # probably not needed
# # aws ec2 delete-network-acl --network-acl-id acl-f615a990 # cannot delete IF default
#
# ## Get Internet GW
# ## aws ec2 describe-internet-gateways --filters Name=vpc-id,Values=<vpc-id>
#
#     aws ec2 describe-internet-gateways --filters Name=attachment.vpc-id,Values=vpc-fd3b4794 | grep InternetGatewayId
#
#     aws ec2 detach-internet-gateway --internet-gateway-id=igw-a1860cc8 --vpc-id=vpc-fd3b4794
#
#     # delete will prob needed
#
# ## Get Route Table
# ## aws ec2 describe-route-tables --filters Name=vpc-id,Values=${vpc_value}
#
# aws ec2 describe-route-tables --filters Name=vpc-id,Values=vpc-ec374b85 | grep RouteTableId \
#

# | tr -d ' |,|"' | sort | uniq | cut -d':' -f2
#
# aws ec2 delete-route-table --route-table-id rtb-949dd3fd # cannot delete IF main
#
# ## Finally !!
# aws ec2 delete-vpc --vpc-id vpc-fd3b4794
